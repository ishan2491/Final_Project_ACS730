{"filter":false,"title":"main.tf","tooltip":"/main.tf","undoManager":{"mark":21,"position":21,"stack":[[{"start":{"row":0,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["terraform {","  backend \"s3\" {","    bucket         = \"your-terraform-state-bucket\"","    key            = \"two-tier-app/terraform.tfstate\"","    region         = \"us-east-1\"","    encrypt        = true","    dynamodb_table = \"terraform-lock\"","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}",""],"id":1}],[{"start":{"row":2,"column":23},"end":{"row":2,"column":49},"action":"remove","lines":["our-terraform-state-bucket"],"id":2},{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"remove","lines":["y"]}],[{"start":{"row":2,"column":22},"end":{"row":3,"column":26},"action":"insert","lines":["","final-project-acs730-ishan"],"id":3}],[{"start":{"row":2,"column":22},"end":{"row":3,"column":0},"action":"remove","lines":["",""],"id":4}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":14,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["# Call VPC Module","module \"vpc\" {","  source = \"./modules/vpc\"","","  vpc_cidr             = \"10.0.0.0/16\"","  public_subnet_cidrs  = [\"10.0.1.0/24\", \"10.0.2.0/24\", \"10.0.3.0/24\", \"10.0.4.0/24\"]","  private_subnet_cidrs = [\"10.0.5.0/24\", \"10.0.6.0/24\"]","  availability_zones   = [\"us-east-1a\", \"us-east-1b\", \"us-east-1c\", \"us-east-1d\"]","}","","# Call EC2 Module","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id         = module.vpc.vpc_id","  public_subnets = module.vpc.public_subnets","  private_subnets = module.vpc.private_subnets","","  ami_id            = \"ami-0c55b159cbfafe1f0\" # Amazon Linux 2 AMI ID","  instance_type     = \"t2.micro\"","  bastion_key_name  = \"bastion_key\"","  web_key_name      = \"web_key\"","  min_size          = 1","  max_size          = 4","  desired_capacity  = 2","  target_group_arn  = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}",""],"id":6}],[{"start":{"row":6,"column":5},"end":{"row":6,"column":37},"action":"remove","lines":["ynamodb_table = \"terraform-lock\""],"id":7},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"remove","lines":["d"]},{"start":{"row":6,"column":2},"end":{"row":6,"column":4},"action":"remove","lines":["  "]},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"remove","lines":["  "]},{"start":{"row":5,"column":25},"end":{"row":6,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["terraform {","  backend \"s3\" {","    bucket         = \"final-project-acs730-ishan\"","    key            = \"two-tier-app/terraform.tfstate\"","    region         = \"us-east-1\"","    encrypt        = true","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}","","# Call VPC Module","module \"vpc\" {","  source = \"./modules/vpc\"","","  vpc_cidr             = \"10.0.0.0/16\"","  public_subnet_cidrs  = [\"10.0.1.0/24\", \"10.0.2.0/24\", \"10.0.3.0/24\", \"10.0.4.0/24\"]","  private_subnet_cidrs = [\"10.0.5.0/24\", \"10.0.6.0/24\"]","  availability_zones   = [\"us-east-1a\", \"us-east-1b\", \"us-east-1c\", \"us-east-1d\"]","}","","# Call EC2 Module","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id         = module.vpc.vpc_id","  public_subnets = module.vpc.public_subnets","  private_subnets = module.vpc.private_subnets","","  ami_id            = \"ami-0c55b159cbfafe1f0\" # Amazon Linux 2 AMI ID","  instance_type     = \"t2.micro\"","  bastion_key_name  = \"bastion_key\"","  web_key_name      = \"web_key\"","  min_size          = 1","  max_size          = 4","  desired_capacity  = 2","  target_group_arn  = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}",""],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["terraform {","  backend \"s3\" {","    bucket  = \"final-project-acs730-ishan\"","    key     = \"two-tier-app/terraform.tfstate\"","    region  = \"us-east-1\"","    encrypt = true","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id          = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets  = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  ami_id           = \"ami-0c55b159cbfafe1f0\"  # Amazon Linux 2 AMI ID","  instance_type    = \"t2.micro\"","  bastion_key_name = \"bastion_key\"","  web_key_name     = \"web_key\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}",""],"id":9}],[{"start":{"row":31,"column":3},"end":{"row":31,"column":69},"action":"remove","lines":["mi_id           = \"ami-0c55b159cbfafe1f0\"  # Amazon Linux 2 AMI ID"],"id":10},{"start":{"row":31,"column":2},"end":{"row":31,"column":3},"action":"remove","lines":["a"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"remove","lines":["  "]},{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":32,"column":2},"end":{"row":33,"column":30},"action":"remove","lines":["bastion_key_name = \"bastion_key\"","  web_key_name     = \"web_key\""],"id":11},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"remove","lines":["  "]},{"start":{"row":31,"column":31},"end":{"row":32,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":9,"column":0},"end":{"row":37,"column":0},"action":"remove","lines":["provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id          = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets  = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  instance_type    = \"t2.micro\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}",""],"id":12}],[{"start":{"row":9,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id          = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets  = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  instance_type    = \"t2.micro\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}",""],"id":13}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["",""],"id":14}],[{"start":{"row":38,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["module \"alb\" {","  source             = \"./modules/alb\"","  vpc_id             = module.vpc.vpc_id","  public_subnets     = module.vpc.public_subnets","  lb_name            = \"ProdALB\"","  create_security_group = true   # This is optional since default is true.","  environment        = \"Prod\"","  listener_port      = 80","  listener_protocol  = \"HTTP\"","  target_group_name  = \"ProdTargetGroup\"","  target_group_port  = 80","  target_group_protocol = \"HTTP\"","  target_type        = \"instance\"","  health_check_path  = \"/\"","  health_check_protocol = \"HTTP\"","  health_check_interval = 30","  healthy_threshold  = 3","  unhealthy_threshold = 3","}",""],"id":15}],[{"start":{"row":57,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["",""],"id":16}],[{"start":{"row":58,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":["resource \"aws_lb_target_group_attachment\" \"web_1_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_1_id","  port             = 80","}","","resource \"aws_lb_target_group_attachment\" \"web_3_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_3_id","  port             = 80","}"],"id":17}],[{"start":{"row":0,"column":0},"end":{"row":68,"column":1},"action":"remove","lines":["terraform {","  backend \"s3\" {","    bucket  = \"final-project-acs730-ishan\"","    key     = \"two-tier-app/terraform.tfstate\"","    region  = \"us-east-1\"","    encrypt = true","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id          = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets  = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  instance_type    = \"t2.micro\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}","","module \"alb\" {","  source             = \"./modules/alb\"","  vpc_id             = module.vpc.vpc_id","  public_subnets     = module.vpc.public_subnets","  lb_name            = \"ProdALB\"","  create_security_group = true   # This is optional since default is true.","  environment        = \"Prod\"","  listener_port      = 80","  listener_protocol  = \"HTTP\"","  target_group_name  = \"ProdTargetGroup\"","  target_group_port  = 80","  target_group_protocol = \"HTTP\"","  target_type        = \"instance\"","  health_check_path  = \"/\"","  health_check_protocol = \"HTTP\"","  health_check_interval = 30","  healthy_threshold  = 3","  unhealthy_threshold = 3","}","","resource \"aws_lb_target_group_attachment\" \"web_1_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_1_id","  port             = 80","}","","resource \"aws_lb_target_group_attachment\" \"web_3_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_3_id","  port             = 80","}"],"id":18}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["terraform {","  backend \"s3\" {","    bucket  = \"final-project-acs730-ishan\"","    key     = \"two-tier-app/terraform.tfstate\"","    region  = \"us-east-1\"","    encrypt = true","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id          = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets  = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  instance_type    = \"t2.micro\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}","","# Call ALB Module using the VPC outputs from remote state","module \"alb\" {","  source             = \"./modules/alb\"","  vpc_id             = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets     = data.terraform_remote_state.vpc.outputs.public_subnets","  lb_name            = \"ProdALB\"","  environment        = \"Prod\"","  listener_port      = 80","  listener_protocol  = \"HTTP\"","  target_group_name  = \"ProdTargetGroup\"","  target_group_port  = 80","  target_group_protocol = \"HTTP\"","  target_type        = \"instance\"","  health_check_path  = \"/\"","  health_check_protocol = \"HTTP\"","  health_check_interval = 30","  healthy_threshold  = 3","  unhealthy_threshold = 3","}","","resource \"aws_lb_target_group_attachment\" \"web_1_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_1_id","  port             = 80","}","","resource \"aws_lb_target_group_attachment\" \"web_3_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_3_id","  port             = 80","}",""],"id":19}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"remove","lines":["terraform {","  backend \"s3\" {","    bucket  = \"final-project-acs730-ishan\"","    key     = \"two-tier-app/terraform.tfstate\"","    region  = \"us-east-1\"","    encrypt = true","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state","module \"ec2\" {","  source = \"./modules/ec2\"","","  vpc_id          = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets  = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  instance_type    = \"t2.micro\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}","","# Call ALB Module using the VPC outputs from remote state","module \"alb\" {","  source             = \"./modules/alb\"","  vpc_id             = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets     = data.terraform_remote_state.vpc.outputs.public_subnets","  lb_name            = \"ProdALB\"","  environment        = \"Prod\"","  listener_port      = 80","  listener_protocol  = \"HTTP\"","  target_group_name  = \"ProdTargetGroup\"","  target_group_port  = 80","  target_group_protocol = \"HTTP\"","  target_type        = \"instance\"","  health_check_path  = \"/\"","  health_check_protocol = \"HTTP\"","  health_check_interval = 30","  healthy_threshold  = 3","  unhealthy_threshold = 3","}","","resource \"aws_lb_target_group_attachment\" \"web_1_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_1_id","  port             = 80","}","","resource \"aws_lb_target_group_attachment\" \"web_3_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_3_id","  port             = 80","}",""],"id":20}],[{"start":{"row":0,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["terraform {","  backend \"s3\" {","    bucket  = \"final-project-acs730-ishan\"","    key     = \"two-tier-app/terraform.tfstate\"","    region  = \"us-east-1\"","    encrypt = true","  }","}","","provider \"aws\" {","  region = \"us-east-1\"","}","","# Retrieve VPC outputs from the remote state of the previously applied VPC module.","data \"terraform_remote_state\" \"vpc\" {","  backend = \"s3\"","  config = {","    bucket = \"final-project-acs730-ishan\"  # Same S3 bucket where the VPC state is stored","    key    = \"vpc/terraform.tfstate\"         # Path to the VPC state file","    region = \"us-east-1\"","  }","}","","# Call EC2 Module using the VPC details obtained from remote state.","module \"ec2\" {","  source         = \"./modules/ec2\"","","  vpc_id         = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets = data.terraform_remote_state.vpc.outputs.public_subnets","  private_subnets = data.terraform_remote_state.vpc.outputs.private_subnets","","  instance_type    = \"t2.micro\"","  min_size         = 1","  max_size         = 4","  desired_capacity = 2","  target_group_arn = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/my-target-group/1234567890abcdef\"","}","","# Call ALB Module using the VPC outputs from remote state.","module \"alb\" {","  source             = \"./modules/alb\"","  vpc_id             = data.terraform_remote_state.vpc.outputs.vpc_id","  public_subnets     = data.terraform_remote_state.vpc.outputs.public_subnets","  lb_name            = \"ProdALB\"","  environment        = \"Prod\"","  listener_port      = 80","  listener_protocol  = \"HTTP\"","  target_group_name  = \"ProdTargetGroup\"","  target_group_port  = 80","  target_group_protocol = \"HTTP\"","  target_type        = \"instance\"","  health_check_path  = \"/\"","  health_check_protocol = \"HTTP\"","  health_check_interval = 30","  healthy_threshold  = 3","  unhealthy_threshold = 3","}","","# Attach Web Server 1 and Web Server 3 to the ALB Target Group.","resource \"aws_lb_target_group_attachment\" \"web_1_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_1_id","  port             = 80","}","","resource \"aws_lb_target_group_attachment\" \"web_3_attachment\" {","  target_group_arn = module.alb.target_group_arn","  target_id        = module.ec2.web_server_3_id","  port             = 80","}",""],"id":21}],[{"start":{"row":17,"column":41},"end":{"row":17,"column":42},"action":"remove","lines":[" "],"id":22,"ignore":true},{"start":{"row":18,"column":36},"end":{"row":18,"column":39},"action":"remove","lines":["   "]},{"start":{"row":25,"column":9},"end":{"row":25,"column":17},"action":"remove","lines":["        "]},{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"insert","lines":[" "]},{"start":{"row":28,"column":17},"end":{"row":28,"column":18},"action":"insert","lines":[" "]},{"start":{"row":40,"column":21},"end":{"row":40,"column":24},"action":"insert","lines":["   "]},{"start":{"row":41,"column":21},"end":{"row":41,"column":23},"action":"insert","lines":["  "]},{"start":{"row":41,"column":23},"end":{"row":41,"column":24},"action":"insert","lines":[" "]},{"start":{"row":42,"column":21},"end":{"row":42,"column":24},"action":"insert","lines":["   "]},{"start":{"row":43,"column":21},"end":{"row":43,"column":22},"action":"insert","lines":[" "]},{"start":{"row":43,"column":22},"end":{"row":43,"column":24},"action":"insert","lines":["  "]},{"start":{"row":44,"column":21},"end":{"row":44,"column":24},"action":"insert","lines":["   "]},{"start":{"row":45,"column":21},"end":{"row":45,"column":22},"action":"insert","lines":[" "]},{"start":{"row":45,"column":22},"end":{"row":45,"column":24},"action":"insert","lines":["  "]},{"start":{"row":46,"column":21},"end":{"row":46,"column":24},"action":"insert","lines":["   "]},{"start":{"row":47,"column":21},"end":{"row":47,"column":24},"action":"insert","lines":["   "]},{"start":{"row":48,"column":21},"end":{"row":48,"column":24},"action":"insert","lines":["   "]},{"start":{"row":50,"column":21},"end":{"row":50,"column":22},"action":"insert","lines":[" "]},{"start":{"row":50,"column":22},"end":{"row":50,"column":24},"action":"insert","lines":["  "]},{"start":{"row":51,"column":21},"end":{"row":51,"column":24},"action":"insert","lines":["   "]},{"start":{"row":54,"column":21},"end":{"row":54,"column":24},"action":"insert","lines":["   "]},{"start":{"row":55,"column":22},"end":{"row":55,"column":24},"action":"insert","lines":["  "]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":24},"end":{"row":19,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1744086729450,"hash":"c01e5baeda0ab42bdc2af91a4af1544393e1f7e0"}